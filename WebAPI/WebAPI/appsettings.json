{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "MapSettings": {
    "DBServerVersion": "10.6.21-MariaDB",
    "OllamaUrl": "localhost",
    "OllamaPort": 11434,
    "OllamaModelName": "llama3:8b-instruct-q4_K_M",
    "UseOllama": false,

    "SmtpSettings": {
      "Host": "smtp.gmail.com",
      "Port": 587,
      "SenderName": "AroundMe",
      "SenderEmail": "AroundMeOff@gmail.com",
      "Username": "AroundMeOff@gmail.com",
      "Password": "oalt dghc gurz epim", // App Password от Gmail
      "UseSsl": true
    },

    "MainPrompt": "Generate up to 10 general Google Maps search queries based on the user's request, the address, hashtags, and a list of nearby places with their names, types, and ratings. Use the **local language** based on the provided address. For example, if the address is in Germany, generate queries in German; if in Japan, use Japanese; etc. The output must include: (1) Up to 5 queries that are based **directly on the nearby places** — if a place name matches the user's intent, use it explicitly in the query (e.g., \"Kharkiv National University\" or \"Derzhprom\"). You can also generalize (e.g., \"historical landmarks near Derzhprom\"). These queries must stay true to the nearby list. Note: The provided list of places is **incomplete** — other nearby places may exist, but only the listed ones are known. (2) Up to 5 additional queries based **solely on the user's request** and logical reasoning — imagine what they might want to find. These can be abstract, nuanced, or complex (e.g., \"restaurants suitable for people with disabilities\", \"quiet cafes for reading\", \"family-friendly museums with interactive exhibits\"). All queries must be relevant and realistic for Google Maps search in the local area. Response format: a plain JSON array of strings, for example: [\"quiet cafes near Derzhprom\", \"accessible restaurants\", \"parks for jogging\", \"historic universities\", \"family-friendly attractions\"]. If no meaningful queries can be generated, return an empty list.",
    "SearchTypePrompt": "Analyze the user's query and respond STRICTLY with a single word: 'true' if the query is a SPECIFIC location (e.g., 'Eiffel Tower', 'Starbucks at 5th Avenue'), 'false' otherwise. Respond with 'false' if the query: (a) contains general categories like 'coffee shops', 'parks', 'libraries'; or (b) lacks specific map-search intent and sounds like a human-oriented request (e.g., 'Surprise me', 'I want something tasty', 'A place for a date'). Do not add explanations, symbols, or formatting. Only respond with: 'true' or 'false'. Examples: 'Central Park' → true, 'cheap hotels' → false, 'Hiking trails' → false, 'Show me something nice' → false. Now respond to this query with ONE WORD:",

    "ExcludedTypes": [
      "parking",
      "car_wash",
      "car_repair",
      "car_rental",
      "gas_station",
      "atm",
      "bank",
      "post_office",
      "bus_stop",
      "bus_station",
      "train_station",
      "subway_station",
      "transit_station",
      "taxi_stand",
      "courthouse",
      "police",
      "fire_station",
      "government_office",
      "local_government_office",
      "corporate_office",
      "insurance_agency",
      "lawyer",
      "real_estate_agency",
      "consultant",
      "storage",
      "warehouse_store",
      "shopping_mall",
      "convenience_store",
      "grocery_store",
      "supermarket",
      "department_store",
      "discount_store",
      "store",
      "hardware_store",
      "home_goods_store",
      "electronics_store",
      "clothing_store",
      "cell_phone_store",
      "liquor_store",
      "coffee_shop",
      "restaurant",
      "fast_food_restaurant",
      "meal_takeaway",
      "meal_delivery",
      "pizza_restaurant",
      "sandwich_shop",
      "bakery",
      "bar",
      "pharmacy",
      "drugstore"
    ],

    "IncludedTypes1": [
      "spa",
      "sauna",
      "wellness_center",
      "yoga_studio",
      "massage",
      "tanning_studio",
      "skin_care_clinic",
      "chiropractor",
      "body_art_service",
      "makeup_artist",
      "astrologer",
      "psychic",
      "beautician"
    ],
    "IncludedTypes2": [
      "museum",
      "art_gallery",
      "historical_place",
      "monument",
      "tourist_attraction",
      "sculpture",
      "cultural_landmark",
      "cultural_center",
      "performing_arts_theater",
      "concert_hall",
      "auditorium",
      "opera_house",
      "philharmonic_hall",
      "planetarium",
      "observation_deck",
      "national_park",
      "state_park",
      "historical_landmark",
      "botanical_garden",
      "zoo",
      "aquarium",
      "wildlife_park",
      "wildlife_refuge",
      "visitor_center",
      "amusement_park",
      "roller_coaster",
      "amusement_center",
      "video_arcade",
      "cultural_center",
      "convention_center",
      "art_studio",
      "wedding_venue"
    ],
    "IncludedTypes3": [
      "park",
      "garden",
      "dog_park",
      "picnic_ground",
      "campground",
      "camping_cabin",
      "hiking_area",
      "cycling_park",
      "adventure_sports_center",
      "off_roading_area",
      "beach",
      "fishing_pond",
      "fishing_charter",
      "ski_resort",
      "swimming_pool",
      "athletic_field",
      "sports_complex",
      "sports_activity_location",
      "sports_club",
      "arena",
      "stadium",
      "skateboard_park",
      "playground",
      "ice_skating_rink"
    ],
    "IncludedTypes4": [
      "cat_cafe",
      "dog_cafe",
      "wine_bar",
      "tea_house",
      "vegan_restaurant",
      "vegetarian_restaurant",
      "chocolate_shop",
      "chocolate_factory",
      "dessert_shop",
      "dessert_restaurant",
      "acai_shop",
      "juice_shop",
      "brunch_restaurant",
      "buffet_restaurant",
      "ramen_restaurant",
      "sushi_restaurant",
      "fine_dining_restaurant",
      "bar_and_grill",
      "brazilian_restaurant",
      "korean_restaurant",
      "indian_restaurant",
      "indonesian_restaurant",
      "middle_eastern_restaurant",
      "thai_restaurant",
      "turkish_restaurant",
      "lebanese_restaurant",
      "african_restaurant",
      "afghani_restaurant"
    ],
    "IncludedTypes5": []
  },
}
